{"version":3,"file":"static/webpack/static/development/pages/index.js.7aa3851dc8a963138ad5.hot-update.js","sources":["webpack:///./components/Header/index.tsx"],"sourcesContent":["import { withRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport fetch from \"isomorphic-unfetch\";\n\nimport { THEME_QUERY } from \"../../apollo_setup/root_queries/theme.query\";\nimport Loading from \"../Loading\";\nimport Error from \"../Error\";\nimport { LOAD_THEMES } from \"../../store/types/theme.types\";\n\nconst Header: React.FC = () => {\n  /** Beginning State */\n  const completeThemes = useSelector(\n    (state: any) => state.themes.completeThemes\n  );\n  const selectedTheme = useSelector((state: any) => state.themes.selectedTheme);\n  /** End State */\n\n  /** Beginning Dispatchers */\n  const dispatch = useDispatch();\n  /** End Dispatchers */\n\n  /** Beginning Apollo Queries &Mutations */\n  const {\n    data: themeData,\n    error: themeError,\n    loading: themeLoading\n  } = useQuery(THEME_QUERY);\n  /** End Apollo Queries & Mutations */\n\n  if (themeError) {\n    return <Error message=\"Could not upload themes\" />;\n  }\n\n  if (themeLoading) {\n    return <Loading />;\n  }\n\n  const { getAllThemes } = themeData;\n  dispatch({\n    type: LOAD_THEMES,\n    payload: {\n      lightMode: getAllThemes.lightMode,\n      darkMode: getAllThemes.darkMode,\n      completeThemes: getAllThemes,\n      selectedTheme: selectedTheme || \"darkMode\"\n    }\n  });\n\n  // dispatch(loadThemesAction(getAllThemes));\n\n  return (\n    <header>\n      <Link href=\"/\">\n        <a>Home</a>\n      </Link>\n      <Link href=\"/about\">\n        <a>About</a>\n      </Link>\n    </header>\n  );\n};\n\n(Header as any).getInitialProps = () => {};\n\nexport default withRouter(Header);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAkBA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AA3BA;AA6BA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AACA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}