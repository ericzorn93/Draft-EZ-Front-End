{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport { LOAD_THEMES } from \"../types/theme.types\";\nexport var loadThemesAction = function loadThemesAction(themes, selectedTheme) {\n  console.log(\"theme action called\");\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch({\n                  type: LOAD_THEMES,\n                  payload: {\n                    lightMode: themes.lightMode,\n                    darkMode: themes.darkMode,\n                    selectedTheme: selectedTheme || \"darkMode\",\n                    completeThemes: themes\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/ericzorn/Dropbox/Projects/UPDATED_PORTFOLIO/frontend/src/client/store/actions/theme.actions.ts"],"names":["LOAD_THEMES","loadThemesAction","themes","selectedTheme","console","log","dispatch","type","payload","lightMode","darkMode","completeThemes"],"mappings":";;AACA,SAASA,WAAT,QAA4B,sBAA5B;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAkBC,aAAlB,EAA4C;AAC1EC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AACLA,gBAAAA,QAAQ,CAAC;AACPC,kBAAAA,IAAI,EAAEP,WADC;AAEPQ,kBAAAA,OAAO,EAAE;AACPC,oBAAAA,SAAS,EAAEP,MAAM,CAACO,SADX;AAEPC,oBAAAA,QAAQ,EAAER,MAAM,CAACQ,QAFV;AAGPP,oBAAAA,aAAa,EAAEA,aAAa,IAAI,UAHzB;AAIPQ,oBAAAA,cAAc,EAAET;AAJT;AAFF,iBAAD,CAAR;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAWD,CAdM","sourcesContent":["import { IThemes } from \"../../../config/utils/interfaces/theme.interface\";\nimport { LOAD_THEMES } from \"../types/theme.types\";\n\nexport const loadThemesAction = (themes: IThemes, selectedTheme: string) => {\n  console.log(\"theme action called\");\n\n  return async (dispatch: Function) => {\n    dispatch({\n      type: LOAD_THEMES,\n      payload: {\n        lightMode: themes.lightMode,\n        darkMode: themes.darkMode,\n        selectedTheme: selectedTheme || \"darkMode\",\n        completeThemes: themes\n      }\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}