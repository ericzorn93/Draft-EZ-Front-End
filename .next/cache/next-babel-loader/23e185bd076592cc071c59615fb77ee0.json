{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { LOAD_THEMES, UPDATE_SELECTED_THEME } from \"./../types/theme.types\";\nvar initialThemeState = {\n  completeThemes: {},\n  lightMode: {},\n  darkMode: {},\n  selectedTheme: \"\",\n  activeTheme: {}\n};\n\nvar themeReducer = function themeReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialThemeState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOAD_THEMES:\n      return _objectSpread({}, state, {\n        darkMode: action.payload.darkMode,\n        lightMode: action.payload.lightMode,\n        completeThemes: action.payload.completeThemes,\n        selectedTheme: action.payload.selectedTheme,\n        activeTheme: action.payload.completeThemes[action.payload.selectedTheme]\n      });\n\n    case UPDATE_SELECTED_THEME:\n      return _objectSpread({}, state, {\n        selectedTheme: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default themeReducer;","map":{"version":3,"sources":["/Users/ericzorn/Dropbox/Projects/UPDATED_PORTFOLIO/frontend/store/reducers/theme.reducer.ts"],"names":["LOAD_THEMES","UPDATE_SELECTED_THEME","initialThemeState","completeThemes","lightMode","darkMode","selectedTheme","activeTheme","themeReducer","state","action","type","payload"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,qBAAtB,QAAmD,wBAAnD;AAGA,IAAMC,iBAAiB,GAAG;AACxBC,EAAAA,cAAc,EAAE,EADQ;AAExBC,EAAAA,SAAS,EAAE,EAFa;AAGxBC,EAAAA,QAAQ,EAAE,EAHc;AAIxBC,EAAAA,aAAa,EAAE,EAJS;AAKxBC,EAAAA,WAAW,EAAE;AALW,CAA1B;;AAQA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAuD;AAAA,MAAtDC,KAAsD,uEAAtCP,iBAAsC;AAAA,MAAnBQ,MAAmB;;AAC1E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,WAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OAAP,CAAeP,QAF3B;AAGED,QAAAA,SAAS,EAAEM,MAAM,CAACE,OAAP,CAAeR,SAH5B;AAIED,QAAAA,cAAc,EAAEO,MAAM,CAACE,OAAP,CAAeT,cAJjC;AAKEG,QAAAA,aAAa,EAAEI,MAAM,CAACE,OAAP,CAAeN,aALhC;AAMEC,QAAAA,WAAW,EAAEG,MAAM,CAACE,OAAP,CAAeT,cAAf,CAA8BO,MAAM,CAACE,OAAP,CAAeN,aAA7C;AANf;;AAQF,SAAKL,qBAAL;AACE,+BACKQ,KADL;AAEEH,QAAAA,aAAa,EAAEI,MAAM,CAACE;AAFxB;;AAIF;AACE,aAAOH,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,eAAeD,YAAf","sourcesContent":["import { LOAD_THEMES, UPDATE_SELECTED_THEME } from \"./../types/theme.types\";\nimport Action from \"../interfaces/action.interface\";\n\nconst initialThemeState = {\n  completeThemes: {},\n  lightMode: {},\n  darkMode: {},\n  selectedTheme: \"\",\n  activeTheme: {}\n};\n\nconst themeReducer = (state: object = initialThemeState, action: Action) => {\n  switch (action.type) {\n    case LOAD_THEMES:\n      return {\n        ...state,\n        darkMode: action.payload.darkMode,\n        lightMode: action.payload.lightMode,\n        completeThemes: action.payload.completeThemes,\n        selectedTheme: action.payload.selectedTheme,\n        activeTheme: action.payload.completeThemes[action.payload.selectedTheme]\n      };\n    case UPDATE_SELECTED_THEME:\n      return {\n        ...state,\n        selectedTheme: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default themeReducer;\n"]},"metadata":{},"sourceType":"module"}