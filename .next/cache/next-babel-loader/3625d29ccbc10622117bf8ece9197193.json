{"ast":null,"code":"import React from \"react\";\nimport { withRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { THEME_QUERY } from \"../../apollo_setup/root_queries/theme.query\";\nimport Loading from \"../Loading\";\nimport Error from \"../Error\";\nimport { LOAD_THEMES } from \"../../store/types/theme.types\";\n\nvar Header = function Header() {\n  /** Beginning State */\n  var completeThemes = useSelector(function (state) {\n    return state.themes.completeThemes;\n  });\n  var selectedTheme = useSelector(function (state) {\n    return state.themes.selectedTheme;\n  });\n  /** End State */\n\n  /** Beginning Dispatchers */\n\n  var dispatch = useDispatch();\n  /** End Dispatchers */\n\n  /** Beginning Apollo Queries &Mutations */\n\n  var _useQuery = useQuery(THEME_QUERY),\n      themeData = _useQuery.data,\n      themeError = _useQuery.error,\n      themeLoading = _useQuery.loading;\n  /** End Apollo Queries & Mutations */\n\n\n  if (themeError) {\n    return React.createElement(Error, {\n      message: \"Could not upload themes\"\n    });\n  }\n\n  if (themeLoading) {\n    return React.createElement(Loading, null);\n  }\n\n  var getAllThemes = themeData.getAllThemes;\n  dispatch({\n    type: LOAD_THEMES,\n    payload: {\n      lightMode: getAllThemes.lightMode,\n      darkMode: getAllThemes.darkMode,\n      completeThemes: getAllThemes,\n      selectedTheme: selectedTheme || \"darkMode\"\n    }\n  }); // dispatch(loadThemesAction(getAllThemes));\n\n  return React.createElement(\"header\", null, React.createElement(Link, {\n    href: \"/\"\n  }, React.createElement(\"a\", null, \"Home\")), React.createElement(Link, {\n    href: \"/about\"\n  }, React.createElement(\"a\", null, \"About\")));\n};\n\nexport default withRouter(Header);","map":null,"metadata":{},"sourceType":"module"}