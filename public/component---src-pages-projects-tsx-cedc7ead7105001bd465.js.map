{"version":3,"sources":["webpack:///./src/pages/projects.tsx"],"names":["ProjectsPage","pageData","allSitePage","edges","map","edge","id","node","path","pageName","internalComponentName","type","includes","page","to","key","state"],"mappings":"gMA+CeA,UAzCgB,WAAM,IAmB7BC,EAnB6B,OAEjCC,YAAeC,MAiBUC,KAAI,SAAAC,GAAI,MAAK,CACtCC,GAAID,EAAKE,KAAKD,GACdE,KAAMH,EAAKE,KAAKC,KAChBC,SAAUJ,EAAKE,KAAKG,sBACpBC,KAAMN,EAAKE,KAAKC,KAAKI,SAAS,UAAY,SAAW,iBAGvD,OACE,YAAC,IAAD,KACE,uCACCX,EAASG,KAAI,SAAAS,GAAI,OAChB,8BACE,YAAC,OAAD,CAAMC,GAAID,EAAKL,KAAMO,IAAKF,EAAKP,GAAIU,MAAO,CAAEL,KAAME,EAAKF,OACpDE,EAAKJ,UAER,8B","file":"component---src-pages-projects-tsx-cedc7ead7105001bd465.js","sourcesContent":["import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\n\nimport Layout from '../components/Layout/layout';\nimport { IAllSitePage } from '../shared/types/interfaces/pages/index.page.interfaces';\n\nconst ProjectsPage: React.FC = () => {\n  const {\n    allSitePage: { edges: pageEdges },\n  } = useStaticQuery<IAllSitePage>(\n    graphql`\n      query allPages {\n        allSitePage {\n          edges {\n            node {\n              id\n              path\n              internalComponentName\n            }\n          }\n        }\n      }\n    `\n  );\n\n  const pageData = pageEdges.map(edge => ({\n    id: edge.node.id,\n    path: edge.node.path,\n    pageName: edge.node.internalComponentName,\n    type: edge.node.path.includes('github') ? 'github' : 'contentful',\n  }));\n\n  return (\n    <Layout>\n      <h1>Projects Page</h1>\n      {pageData.map(page => (\n        <>\n          <Link to={page.path} key={page.id} state={{ type: page.type }}>\n            {page.pageName}\n          </Link>\n          <br />\n        </>\n      ))}\n    </Layout>\n  );\n};\n\nexport default ProjectsPage;\n"],"sourceRoot":""}